<!-- Instantiate its contents, once for each item in a supplied array. -->

<Control name="List">

<content>
	<div id="List_expansion"/>
</content>

<script>
$.extend(List.prototype, {

	expansion: Control.Element("List_expansion").content(),

	ready: function() {
		this.expand();
	},
	
	bind: null,
	
	content: Control.Property(function() {
		this.expand();
	}),
	
	data: Control.Property(function() {
		this.expand();
	}),
	
	expand: function() {
		var template = this.content();
		if (template != null)
		{
			$(this.List_expansion).empty();
			var data = this.data();
			if (data != null)
			{
				for (var i = 0; i < data.length; i++)
				{
					/*
					var newElement = this.cloneElementWithControls(template);
					if (this.bind != null) {
						this.bind.call(newElement, data[i]);
					}
					$(newElement).appendTo(this.List_expansion);
					*/
					var $newElement = $(template).clone();
					$newElement.appendTo(this.List_expansion);
				}
			}
		}
	},
	
	cloneElementWithControls: function(element) {
		
	},
	
	cloneElementWithControl: function(element) {
		var $newElement = $(element).clone();
		var control = Control(element);
		if (control !== undefined)
		{
			var newControl = new control.constructor();
			$.extend(true, newControl, control);
		}
		newControl.element = $newElement;
		$.data(newControl.element, "control", newControl);
		return $newElement[0];
	}
	
});
</script>

</Control>
