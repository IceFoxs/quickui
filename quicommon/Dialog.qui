<Control name="Dialog">

<prototype>
	<Overlay dismissOnOutsideClick="false" />
</prototype>

<style>

{
	background-color: white;
	border: 1px solid black;
	position: fixed;
}

</style>

<script>
// Class method
Dialog.extend({
	showDialog: function(dialogClass, properties, callbackOk, callbackCancel) {
		$("body")
			.append("<div/>")
			.find(":last")
	        .bind({
	            ok: function() {
	                if (callbackOk)
	                {
	                    callbackOk.call(this);
	                }
	            },
	            cancel: function() {
	                if (callbackCancel)
	                {
	                    callbackCancel.call(this);
	                }
	            }
	        })
			.control(dialogClass, properties)
			.showOverlay();
	}
});

Dialog.prototype.extend({
	
	initialize: function() {
		Dialog.superClass.prototype.initialize.call(this);
		var self = this;
		this.keydown(function(event) {
			if (event.keyCode == 27)
			{
				self.cancel();
			}
		});
	},

	cancel: Control.method(function() {
		this
			.hideOverlay()
			.trigger("cancel");
	}),
	
	close: Control.method(function() {
		this
			.hideOverlay()
			.trigger("ok")
			.remove();
	}),
	
	positionOverlay: Control.method(function() {
		// Center dialog horizontally and vertically.
		var left = ($(window).width() - $(this.element).outerWidth()) / 2;
		var top = ($(window).height() - $(this.element).outerHeight()) / 2;
		this.css({
			left: left,
			top: top
		});
	})
});
</script>

</Control>
