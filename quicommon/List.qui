<!--
Instantiates an instance of another control class for each item in a list.
-->

<Control name="List">

<script>
List.prototype.extend({
    
    itemClass: Control.property["class"](),
    items: Control.property(function() { this._refresh(); }),
    
    //
    // Used to map an incoming list item to property setters on the control
    // class indicated by itemClass. This can either be a simple string,
    // in which case it will be taken as the name of a control class property,
    // or a mapping function that takes an item (and, optionally an index) and
    // returns a property dictionary.
    //
    mapItemTo: Control.property(null, null),
    
    _refresh: function() {
        var itemClass = this.itemClass();
        var items = this.items();
        if (itemClass && items)
        {
            var mapItemTo = this.mapItemTo();
            var self = this;
            var controls = $.map(items, function(item, index) {
                var properties;
                if (mapItemTo)
                {
                    if ($.isFunction(mapItemTo))
                    {
                        // mapItemTo specifies a mapping function.
                        properties = mapItemTo.call(self, item, index);
                    }
                    else
                    {
                        // mapItemTo specifies a property name.
                        properties = {};
                        properties[mapItemTo] = item;
                    }
                }
                else if (typeof item == "string" || item instanceof String)
                {
                    // Simple string; map to content property.
                    properties = { content: item };
                }
                else
                {
                    // Use the item as is for the control's properties.
                    properties = item;
                }
                var control = itemClass.create(properties);
                return control;
            });
            this.content(controls);
        }
    }
    
});
</script>

</Control>
