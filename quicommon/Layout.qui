<!-- Base class for controls that want to do custom layout work when resized. -->

<Control name="Layout">

<script>
Layout.prototype.extend({
    
    initialize: function() {
        Layout.track(this);
    },
    
    // Base implementation does nothing.
    layout: function() {},
    
    _message: function(s) {
        console.log(this.className + "#" + this.attr("id") + " " + s);
    }
    
});

// Class methods.
Layout.extend({
    
    _controls: null,
    _initialized: false,
    _pending: null,
    
    recalc: function() {
        console.log("recalc");
        for (var i = Layout._controls.length - 1; i >= 0; i--)
        {
            var control = Layout._controls[i];
            //if ($control.parents().length > 0)
            if ($.contains(document.body, control))
            {
                var $control = Control(control).control();
                $control.layout();
            }
        }
    },
    
    track: function($controls) {
        Layout._initialize();
        Layout._controls = Layout._controls.concat($controls.get());
        this.recalc();
    },
    
    untrack: function(control) {
        //this.recalc();
    },
    
    // An element has been added to the document; see if it needs layout. 
    _documentNodeInserted: function(event) {
        console.log("_documentNodeInserted");
        var control = event.target;
        if (Layout._controls.indexOf(control) >= 0)
        {
            var $control = Control(control).control();
            $control._message("inserted");
            Layout.recalc();
        }
        //$(document).unbind("DOMNodeInserted", initialLayoutHandler);
    },
    
    // Initialize layout engine overall (not a specific instance).
    _initialize: function() {
        
        if (Layout._initialized)
        {
            // Already did this.
            return;
        }
        
        Layout._pending = [];   // Controls waiting for initial layout
        Layout._controls = [];  // Controls being tracked for layout
        
        // Ensure an initial resize happens after an element is inserted into the DOM.
        $(document).bind("DOMNodeInserted", Layout._documentNodeInserted);
       
        // Recalc layout whenever the window size changes.
        $(window).resize(function() {
            Layout.recalc();
        });
        
        Layout._initialized = true;        
    }
        
});
</script>

</Control>
