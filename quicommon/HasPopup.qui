<!--
A control with a popup menu that appears above or below it.
-->

<Control name="HasPopup">
	
<content>
    <div id="HasPopup_content" />
	<Popup id="HasPopup_popup" />
</content>

<script>
HasPopup.prototype.extend({
	
	content: Control.bindTo( "$HasPopup_content", "content" ),
	closeOnInsideClick: Control.bindTo( "$HasPopup_popup", "closeOnInsideClick" ),
	openOnClick: Control.property.bool(),
	popup: Control.bindTo( "$HasPopup_popup", "content" ),

	initialize: function()
	{
		var self = this;
		this.bind( "opened", function() {
		    self._positionPopup();
		});
        this.$HasPopup_content().click( function() {
            if ( self.openOnClick() ) {
                self.open();
            }
        });
	},
	
	close: function() {
	    return this.$HasPopup_popup().close();
	},
    
    open: function() {
        return this.$HasPopup_popup().open();
    },
    
    _positionPopup: function() {
        var $content = this.$HasPopup_content();
        var contentTop = $content.position().top;
        var contentLeft = $content.position().left;
        var contentHeight = $content.outerHeight();
        var contentWidth = $content.outerWidth();
        var contentBottom = contentTop + contentHeight;
        var contentRight = contentLeft + contentWidth;
        
        var $popup = this.$HasPopup_popup();
        var popupHeight = $popup.outerHeight( true );
        var popupWidth = $popup.outerWidth( true );

        var scrollTop = $( document ).scrollTop();
        var scrollLeft = $( document ).scrollLeft();
        var windowHeight = $( window ).height();
        var windowWidth = $( window ).width();

        // Vertically position below (preferred) or above the content.
        var popupFitsBelow = ( contentBottom + popupHeight <= windowHeight + scrollTop );
        var popupFitsAbove = ( contentTop - popupHeight >= scrollTop ); 
        var popupTop = ( popupFitsBelow || !popupFitsAbove )
                            ? contentBottom                 // Show below
                            : contentTop - popupHeight;     // Show above
        
        // Horizontally left (preferred) or right align w.r.t. content.
        var popupFitsLeftAligned = ( contentLeft + popupWidth <= windowWidth + scrollLeft );
        var popupFitsRightAligned = ( contentRight - popupWidth >= scrollLeft );
        var popupLeft = ( popupFitsLeftAligned || !popupFitsRightAligned )
                            ? contentLeft                   // Left align
                            : contentRight - popupWidth;    // Right align 

        $popup.css({
            "top": popupTop,
            "left": popupLeft
        });
    }
});

</script>

</Control>
